const line = require('@line/bot-sdk');
const { supabase } = require('../utils/supabaseClient'); // ‡πÄ‡∏û‡∏¥‡πà‡∏° supabase client
require('dotenv').config();

// LINE Bot 2 Client
const client = new line.Client({
  channelAccessToken: process.env.LINE_BOT2_ACCESS_TOKEN
});

const sendOrderFlex = async (req, res) => {
  try {
    const { ref_code, license_no } = req.body;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤
    if (!ref_code || !license_no) {
      return res.status(400).json({ message: '‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ ref_code ‡πÅ‡∏•‡∏∞ license_no' });
    }

    console.log("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å database:", { ref_code, license_no });

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å license_holders
    const { data: licenseData, error: licenseError } = await supabase
      .from('license_holders')
      .select('*')
      .eq('license_no', license_no)
      .eq('ref_code', ref_code)
      .single();

    if (licenseError || !licenseData) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô license_holders:", licenseError);
      return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• license' });
    }

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å slip_submissions
    const { data: slipData, error: slipError } = await supabase
      .from('slip_submissions')
      .select('*')
      .eq('license_no', license_no)
      .eq('ref_code', ref_code)
      .single();

    if (slipError || !slipData) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô slip_submissions:", slipError);
      return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• slip' });
    }

    console.log("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß:", { licenseData, slipData });

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message
    const flexMessage = {
      type: 'flex',
      altText: `‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å ${licenseData.first_name} ${licenseData.last_name}`,
      contents: {
        type: 'bubble',
        header: {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'text',
              text: 'üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà',
              weight: 'bold',
              size: 'lg',
              color: '#FF5551'
            }
          ]
        },
        body: {
          type: 'box',
          layout: 'vertical',
          spacing: 'sm',
          contents: [
            {
              type: 'text',
              text: `üìã License: ${licenseData.license_no}`,
              weight: 'bold',
              size: 'sm'
            },
            {
              type: 'text',
              text: `üë§ ‡∏ä‡∏∑‡πà‡∏≠: ${licenseData.first_name} ${licenseData.last_name}`,
              size: 'sm'
            },
            {
              type: 'text',
              text: `üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå: ${licenseData.phone_number}`,
              size: 'sm'
            },
            {
              type: 'text',
              text: `üÜî ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£: ${licenseData.national_id}`,
              size: 'sm'
            },
            {
              type: 'text',
              text: `üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${licenseData.address}`,
              size: 'sm',
              wrap: true
            },
            {
              type: 'text',
              text: `üìÆ ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå: ${licenseData.postal_code}`,
              size: 'sm'
            },
            {
              type: 'text',
              text: `üì¶ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${slipData.product_source}`,
              size: 'sm'
            },
            {
              type: 'text',
              text: `üîñ Ref: ${ref_code}`,
              size: 'sm'
            }
          ]
        },
        footer: {
          type: 'box',
          layout: 'vertical',
          spacing: 'md',
          contents: [
            // ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡∏™‡∏•‡∏¥‡∏õ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ slip_image_url)
            ...(slipData.slip_image_url ? [{
              type: 'button',
              style: 'link',
              action: {
                type: 'uri',
                label: 'üìÑ ‡∏î‡∏π‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô',
                uri: slipData.slip_image_url
              }
            }] : []),
            {
              type: 'box',
              layout: 'horizontal',
              spacing: 'md',
              contents: [
                {
                  type: 'button',
                  style: 'primary',
                  color: '#28a745',
                  action: {
                    type: 'uri',
                    label: '‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
                    uri: `https://line-bot-adt.onrender.com/approve-order?ref_code=${ref_code}&license_no=${license_no}`
                  }
                },
                {
                  type: 'button',
                  style: 'secondary',
                  color: '#dc3545',
                  action: {
                    type: 'uri',
                    label: '‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
                    uri: `https://line-bot-adt.onrender.com/reject-order?ref_code=${ref_code}&license_no=${license_no}`
                  }
                }
              ]
            }
          ]
        }
      }
    };

    // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE USER ID ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    const targetUserId = process.env.ADMIN_USER_ID_BOT2;
    if (!targetUserId) {
      throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ADMIN_USER_ID_BOT2 .env");
    }

    console.log("üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á Flex Message ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Admin:", targetUserId);

    await client.pushMessage(targetUserId, flexMessage);

    console.log("‚úÖ ‡∏™‡πà‡∏á Flex Message ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");

    return res.status(200).json({ 
      message: '‚úÖ ‡∏™‡πà‡∏á Flex ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß',
      license_no,
      ref_code
    });

  } catch (error) {
    console.error('‚ùå ‡∏™‡πà‡∏á Flex ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
    return res.status(500).json({ 
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Flex',
      error: error.message
    });
  }
};

module.exports = { sendOrderFlex };
