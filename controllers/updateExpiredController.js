// üìÅ controllers/updateExpiredController.js

const { supabase } = require('../utils/supabaseClient');

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß
 * ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô status ‡∏à‡∏≤‡∏Å ACTIVE ‚Üí BLOCK
 */
const updateExpiredMachines = async (req, res) => {
  try {
    const now = new Date().toISOString();

    // 1. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á ACTIVE ‡∏≠‡∏¢‡∏π‡πà
    const { data, error } = await supabase
      .from('registered_machines')
      .update({ status: 'BLOCK', status_update_at: now })
      .eq('status', 'ACTIVE')
      .lt('expires_at', now);

    if (error) {
      console.error('[‚ùå] ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error);
      return res.status(500).json({ success: false, message: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', error });
    }

    console.log(`[‚úÖ] ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ${data?.length || 0} ‡∏£‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    return res.status(200).json({
      success: true,
      message: `‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${data?.length || 0} ‡∏£‡∏≤‡∏¢`,
    });

  } catch (err) {
    console.error('[‚ùå] ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô updateExpiredMachines:', err);
    return res.status(500).json({ success: false, message: 'Server error' });
  }
};

module.exports = {
  updateExpiredMachines
};
