const line = require('@line/bot-sdk');
const { supabase } = require('../utils/supabaseClient');
require('dotenv').config();

// LINE Bot 2 Client
const client = new line.Client({
  channelAccessToken: process.env.LINE_BOT2_ACCESS_TOKEN
});

const submitStarterSlip = async (req, res) => {
  try {
    const { ref_code, duration } = req.body;

    if (!ref_code || !duration) {
      return res.status(400).json({ message: '‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ ref_code ‡πÅ‡∏•‡∏∞ duration' });
    }

    console.log("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ref_code:", ref_code);

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å starter_plan_users
    const { data, error } = await supabase
      .from('starter_plan_users')
      .select('first_name, last_name, phone_number, national_id, slip_image_url')
      .eq('ref_code', ref_code)
      .single();

    if (error || !data) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô starter_plan_users:", error);
      return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ref_code ‡∏ô‡∏µ‡πâ' });
    }

    const { first_name, last_name, phone_number, national_id, slip_image_url } = data;
    const full_name = `${first_name} ${last_name}`;

    console.log("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", full_name);

    // Flex Message
    const flexMessage = {
      type: "flex",
      altText: `‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Starter Plan ‡∏Ç‡∏≠‡∏á ${full_name}`,
      contents: {
        type: "bubble",
        header: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà",
              size: "lg",
              weight: "bold",
              color: "#007BFF"
            }
          ]
        },
        body: {
          type: "box",
          layout: "vertical",
          spacing: "sm",
          contents: [
            { type: "text", text: `‡∏ä‡∏∑‡πà‡∏≠: ${full_name}`, wrap: true },
            { type: "text", text: `‡πÄ‡∏ö‡∏≠‡∏£‡πå: ${phone_number}`, wrap: true },
            { type: "text", text: `‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£: ${national_id}`, wrap: true },
            { type: "text", text: `‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°: ${duration} ‡∏ß‡∏±‡∏ô`, wrap: true },
            { type: "text", text: `Ref: ${ref_code}`, wrap: true }
          ]
        },
        footer: {
          type: "box",
          layout: "vertical",
          contents: [
            ...(slip_image_url ? [{
              type: "button",
              action: {
                type: "uri",
                label: "‡∏î‡∏π‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô",
                uri: slip_image_url
              },
              style: "primary"
            }] : [])
          ]
        }
      }
    };

    const targetUserId = process.env.ADMIN_LINE_BOT2_USER_ID;
    if (!targetUserId) {
      throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ADMIN_LINE_BOT2_USER_ID ‡πÉ‡∏ô .env");
    }

    console.log("üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á Flex Message ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Admin:", targetUserId);

    await client.pushMessage(targetUserId, flexMessage);

    console.log("‚úÖ ‡∏™‡πà‡∏á Flex Message ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");

    return res.status(200).json({ 
      message: '‚úÖ ‡∏™‡πà‡∏á Flex ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß',
      ref_code,
      duration
    });

  } catch (error) {
    console.error("‚ùå ERROR @ submitStarterSlip:", error);
    return res.status(500).json({
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Flex',
      error: error.message
    });
  }
};

module.exports = submitStarterSlip;
