// controllers/lineWebhookBot2.js
const axios = require('axios');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á logger ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ
const logger = {
  info: (message) => console.log(`[INFO] ${message}`),
  warn: (message) => console.log(`[WARN] ${message}`),
  error: (message) => console.error(`[ERROR] ${message}`)
};

const handleWebhookFromBot2 = async (req, res) => {
  const events = req.body.events;
  for (const event of events) {
    if (event.type === 'message' && event.message.type === 'text') {
      const msg = event.message.text;
      const userId = event.source.userId;
      // ‚úÖ ‡πÅ‡∏¢‡∏Å Ref.Code ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÄ‡∏ä‡πà‡∏ô "@ML76 ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö"
      const refCodeMatch = msg.match(/^@(\w+)/);
      if (!refCodeMatch) {
        logger.warn(`‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà Ref.Code ‡∏ó‡∏µ‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ @ ‡∏°‡∏≤‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ${msg}`);
        continue;
      }
      const ref_code = refCodeMatch[1];
      const message = msg.replace(refCodeMatch[0], '').trim();
      if (!message) {
        logger.warn(`Ref.Code: ${ref_code} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö`);
        continue;
      }
      try {
        // ‚úÖ ‡∏™‡πà‡∏á‡πÑ‡∏õ API1
        const response = await axios.post('https://line-bot-adt.onrender.com/reply-from-admin', {
          ref_code,
          message
        });
        logger.info(`üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á Ref: ${ref_code} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
      } catch (err) {
        logger.error(`‚ùå Error ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ API1: ${err.message}`);
      }
    }
  }
  res.status(200).send('OK');
};

module.exports = { handleWebhookFromBot2 };
